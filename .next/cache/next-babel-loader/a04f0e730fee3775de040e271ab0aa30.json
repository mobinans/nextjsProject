{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\mobin\\\\Desktop\\\\ReactApp\\\\next\\\\pages\\\\[country]\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport axios from 'axios'; //import Thumbnail from '../../components/Thumbnail';\n\nvar Home = function Home(_ref) {\n  var shows = _ref.shows;\n\n  //console.log(shows)    \n  var renderShows = function renderShows() {\n    return shows.map(function (showItem, index) {\n      var show = showItem.show;\n      return __jsx(\"li\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      }, __jsx(Thumbnail, {\n        imageURL: show.image.medium,\n        caption: show.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      }));\n    });\n  };\n\n  return __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, renderShows());\n};\n\nHome.getInitialProps = function _callee(context) {\n  var country, response;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          country = context.query.country || 'in';\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(axios.get(\"http://api.tvmaze.com/schedule?country=\".concat(country, \"&date=2014-12-01\")));\n\n        case 3:\n          response = _context.sent;\n          return _context.abrupt(\"return\", {\n            shows: response.data\n          });\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/mobin/Desktop/ReactApp/next/pages/[country]/index.js"],"names":["axios","Home","shows","renderShows","map","showItem","index","show","image","medium","name","getInitialProps","context","country","query","get","response","data"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAAY;AAAA,MAAVC,KAAU,QAAVA,KAAU;;AACrB;AACA,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACtB,WAAOD,KAAK,CAACE,GAAN,CAAU,UAACC,QAAD,EAAWC,KAAX,EAAmB;AAAA,UACzBC,IADyB,GACjBF,QADiB,CACzBE,IADyB;AAEhC,aAAO;AAAI,QAAA,GAAG,EAAED,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgB,MAAC,SAAD;AAAW,QAAA,QAAQ,EAAIC,IAAI,CAACC,KAAL,CAAWC,MAAlC;AAA0C,QAAA,OAAO,EAAEF,IAAI,CAACG,IAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAhB,CAAP;AACH,KAHM,CAAP;AAIH,GALD;;AAOA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKP,WAAW,EAAhB,CADJ;AAGH,CAZD;;AAcAF,IAAI,CAACU,eAAL,GAAuB,iBAAMC,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACbC,UAAAA,OADa,GACHD,OAAO,CAACE,KAAR,CAAcD,OAAd,IAAyB,IADtB;AAAA;AAAA,2CAEIb,KAAK,CAACe,GAAN,kDAAoDF,OAApD,sBAFJ;;AAAA;AAEbG,UAAAA,QAFa;AAAA,2CAGb;AACFd,YAAAA,KAAK,EAAEc,QAAQ,CAACC;AADd,WAHa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;;AAQA,eAAehB,IAAf","sourcesContent":["import axios from 'axios';\r\n\r\n//import Thumbnail from '../../components/Thumbnail';\r\n\r\nconst Home = ({shows}) =>{\r\n    //console.log(shows)    \r\n    const renderShows = () => {\r\n        return shows.map((showItem, index)=>{\r\n            const {show} = showItem;\r\n            return <li key={index}><Thumbnail imageURL = {show.image.medium} caption={show.name}/></li>\r\n        })\r\n    }\r\n\r\n    return(\r\n        <ul>{renderShows()}</ul>\r\n    );\r\n}\r\n\r\nHome.getInitialProps = async context => {\r\n    const country = context.query.country || 'in';\r\n    const response = await axios.get(`http://api.tvmaze.com/schedule?country=${country}&date=2014-12-01`);\r\n    return{\r\n        shows: response.data\r\n    }\r\n}\r\n\r\nexport default Home;"]},"metadata":{},"sourceType":"module"}