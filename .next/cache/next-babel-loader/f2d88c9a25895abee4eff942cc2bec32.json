{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mobin\\\\Desktop\\\\ReactApp\\\\next\\\\pages\\\\[country]\\\\index.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport axios from 'axios';\nimport Thumbnail from '../../components/Thumbnail';\nimport Header from '../../components/Header';\n\nconst Home = ({\n  shows,\n  country\n}) => {\n  //console.log(shows)    \n  const renderShows = () => {\n    return shows.map((showItem, index) => {\n      const {\n        show\n      } = showItem;\n      return __jsx(\"li\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }, __jsx(Thumbnail, {\n        imageURL: show.image && show.image.medium || undefined,\n        caption: show.name,\n        href: \"[country]/[showId]\",\n        as: `/${country}/${show.id}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }));\n    });\n  };\n\n  return __jsx(\"div\", {\n    className: \"home\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, __jsx(\"ul\", {\n    className: \"jsx-622617634\" + \" \" + \"tvshows-grid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, renderShows(), __jsx(_JSXStyle, {\n    id: \"622617634\",\n    __self: this\n  }, \".tvshows-grid.jsx-622617634{display:grid;grid-template-columns:1fr 1fr;gap:10px;list-style-type:none;padding:0;margin-top:30px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcbW9iaW5cXERlc2t0b3BcXFJlYWN0QXBwXFxuZXh0XFxwYWdlc1xcW2NvdW50cnldXFxpbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUEwQm9CLEFBRW9CLGFBQ2lCLDhCQUNILFNBQ1kscUJBQ1gsVUFDTSxnQkFDcEMiLCJmaWxlIjoiQzpcXFVzZXJzXFxtb2JpblxcRGVza3RvcFxcUmVhY3RBcHBcXG5leHRcXHBhZ2VzXFxbY291bnRyeV1cXGluZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJztcclxuXHJcbmltcG9ydCBUaHVtYm5haWwgZnJvbSAnLi4vLi4vY29tcG9uZW50cy9UaHVtYm5haWwnO1xyXG5pbXBvcnQgSGVhZGVyIGZyb20gJy4uLy4uL2NvbXBvbmVudHMvSGVhZGVyJztcclxuXHJcbmNvbnN0IEhvbWUgPSAoeyBzaG93cywgY291bnRyeSB9KSA9PiB7XHJcbiAgICAvL2NvbnNvbGUubG9nKHNob3dzKSAgICBcclxuICAgIGNvbnN0IHJlbmRlclNob3dzID0gKCkgPT4ge1xyXG4gICAgICAgIHJldHVybiBzaG93cy5tYXAoKHNob3dJdGVtLCBpbmRleCkgPT4ge1xyXG4gICAgICAgICAgICBjb25zdCB7IHNob3cgfSA9IHNob3dJdGVtO1xyXG4gICAgICAgICAgICByZXR1cm4gPGxpIGtleT17aW5kZXh9PlxyXG4gICAgICAgICAgICAgICAgPFRodW1ibmFpbFxyXG4gICAgICAgICAgICAgICAgICAgIGltYWdlVVJMPXsoc2hvdy5pbWFnZSAmJiBzaG93LmltYWdlLm1lZGl1bSkgfHwgdW5kZWZpbmVkfVxyXG4gICAgICAgICAgICAgICAgICAgIGNhcHRpb249e3Nob3cubmFtZX1cclxuICAgICAgICAgICAgICAgICAgICBocmVmPVwiW2NvdW50cnldL1tzaG93SWRdXCJcclxuICAgICAgICAgICAgICAgICAgICBhcz17YC8ke2NvdW50cnl9LyR7c2hvdy5pZH1gfVxyXG4gICAgICAgICAgICAgICAgLz48L2xpPlxyXG4gICAgICAgIH0pXHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIChcclxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImhvbWVcIj5cclxuICAgICAgICAgICAgPHVsIGNsYXNzTmFtZT1cInR2c2hvd3MtZ3JpZFwiPlxyXG4gICAgICAgICAgICAgICAge3JlbmRlclNob3dzKCl9XHJcblxyXG4gICAgICAgICAgICAgICAgPHN0eWxlIGpzeD57XHJcbiAgICAgICAgICAgICAgICAgICAgYC50dnNob3dzLWdyaWQge1xyXG5cdFx0XHRcdFx0XHRkaXNwbGF5OiBncmlkO1xyXG5cdFx0XHRcdFx0XHRncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciAxZnI7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGdhcDogMTBweDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiAwO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBtYXJnaW4tdG9wOiAzMHB4O1xyXG5cdFx0XHRcdH1gfTwvc3R5bGU+XHJcbiAgICAgICAgICAgIDwvdWw+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICApO1xyXG59XHJcblxyXG5Ib21lLmdldEluaXRpYWxQcm9wcyA9IGFzeW5jIGNvbnRleHQgPT4ge1xyXG4gICAgY29uc3QgY291bnRyeSA9IGNvbnRleHQucXVlcnkuY291bnRyeSB8fCAnaW4nO1xyXG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBheGlvcy5nZXQoYGh0dHA6Ly9hcGkudHZtYXplLmNvbS9zY2hlZHVsZT9jb3VudHJ5PSR7Y291bnRyeX0mZGF0ZT0yMDE0LTEyLTAxYCk7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICAgIHNob3dzOiByZXNwb25zZS5kYXRhLFxyXG4gICAgICAgIGNvdW50cnlcclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgSG9tZTsiXX0= */\\n/*@ sourceURL=C:\\\\\\\\Users\\\\\\\\mobin\\\\\\\\Desktop\\\\\\\\ReactApp\\\\\\\\next\\\\\\\\pages\\\\\\\\[country]\\\\\\\\index.js */\")));\n};\n\nHome.getInitialProps = async context => {\n  const country = context.query.country || 'in';\n  const response = await axios.get(`http://api.tvmaze.com/schedule?country=${country}&date=2014-12-01`);\n  return {\n    shows: response.data,\n    country\n  };\n};\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/mobin/Desktop/ReactApp/next/pages/[country]/index.js"],"names":["axios","Thumbnail","Header","Home","shows","country","renderShows","map","showItem","index","show","image","medium","undefined","name","id","getInitialProps","context","query","response","get","data"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAwB;AACjC;AACA,QAAMC,WAAW,GAAG,MAAM;AACtB,WAAOF,KAAK,CAACG,GAAN,CAAU,CAACC,QAAD,EAAWC,KAAX,KAAqB;AAClC,YAAM;AAAEC,QAAAA;AAAF,UAAWF,QAAjB;AACA,aAAO;AAAI,QAAA,GAAG,EAAEC,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACH,MAAC,SAAD;AACI,QAAA,QAAQ,EAAGC,IAAI,CAACC,KAAL,IAAcD,IAAI,CAACC,KAAL,CAAWC,MAA1B,IAAqCC,SADnD;AAEI,QAAA,OAAO,EAAEH,IAAI,CAACI,IAFlB;AAGI,QAAA,IAAI,EAAC,oBAHT;AAII,QAAA,EAAE,EAAG,IAAGT,OAAQ,IAAGK,IAAI,CAACK,EAAG,EAJ/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADG,CAAP;AAOH,KATM,CAAP;AAUH,GAXD;;AAaA,SACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA,uCAAc,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKT,WAAW,EADhB;AAAA;AAAA;AAAA,krFADJ,CADJ;AAiBH,CAhCD;;AAkCAH,IAAI,CAACa,eAAL,GAAuB,MAAMC,OAAN,IAAiB;AACpC,QAAMZ,OAAO,GAAGY,OAAO,CAACC,KAAR,CAAcb,OAAd,IAAyB,IAAzC;AACA,QAAMc,QAAQ,GAAG,MAAMnB,KAAK,CAACoB,GAAN,CAAW,0CAAyCf,OAAQ,kBAA5D,CAAvB;AACA,SAAO;AACHD,IAAAA,KAAK,EAAEe,QAAQ,CAACE,IADb;AAEHhB,IAAAA;AAFG,GAAP;AAIH,CAPD;;AASA,eAAeF,IAAf","sourcesContent":["import axios from 'axios';\r\n\r\nimport Thumbnail from '../../components/Thumbnail';\r\nimport Header from '../../components/Header';\r\n\r\nconst Home = ({ shows, country }) => {\r\n    //console.log(shows)    \r\n    const renderShows = () => {\r\n        return shows.map((showItem, index) => {\r\n            const { show } = showItem;\r\n            return <li key={index}>\r\n                <Thumbnail\r\n                    imageURL={(show.image && show.image.medium) || undefined}\r\n                    caption={show.name}\r\n                    href=\"[country]/[showId]\"\r\n                    as={`/${country}/${show.id}`}\r\n                /></li>\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"home\">\r\n            <ul className=\"tvshows-grid\">\r\n                {renderShows()}\r\n\r\n                <style jsx>{\r\n                    `.tvshows-grid {\r\n\t\t\t\t\t\tdisplay: grid;\r\n\t\t\t\t\t\tgrid-template-columns: 1fr 1fr;\r\n                        gap: 10px;\r\n                        list-style-type: none;\r\n                        padding: 0;\r\n                        margin-top: 30px;\r\n\t\t\t\t}`}</style>\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nHome.getInitialProps = async context => {\r\n    const country = context.query.country || 'in';\r\n    const response = await axios.get(`http://api.tvmaze.com/schedule?country=${country}&date=2014-12-01`);\r\n    return {\r\n        shows: response.data,\r\n        country\r\n    }\r\n}\r\n\r\nexport default Home;"]},"metadata":{},"sourceType":"module"}