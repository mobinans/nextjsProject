{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mobin\\\\Desktop\\\\ReactApp\\\\next\\\\components\\\\Header\\\\index.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport { useRouter } from 'next/router';\nconst countries = [{\n  label: 'us',\n  name: 'United State'\n}, {\n  label: 'in',\n  name: 'India'\n}];\n\nconst Header = () => {\n  const router = useRouter();\n  const {\n    0: selectedCountry,\n    1: setSelectedCountry\n  } = useState(router.query.country);\n\n  const onChangeHandler = e => {\n    setSelectedCountry(e.target.value);\n    router.push(`/[country]`, `/${e.target.value}`);\n  };\n\n  const renderCountries = () => {\n    return countries.map(country => {\n      return __jsx(\"option\", {\n        key: country.label,\n        value: country.label,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, country.name);\n    });\n  };\n\n  return __jsx(\"div\", {\n    className: \"jsx-3704513609\" + \" \" + \"header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, __jsx(\"select\", {\n    value: selectedCountry,\n    onChange: onChangeHandler,\n    className: \"jsx-3704513609\" + \" \" + \"grp__option\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, renderCountries()), __jsx(_JSXStyle, {\n    id: \"3704513609\",\n    __self: this\n  }, \".header.jsx-3704513609{padding:20px;background-color:#333;color:#fff;text-align:center;cursor:pointer;position:fixed;top:0;width:100%;}.grp__option.jsx-3704513609{font-size:20px;padding:2px;margin:0;}.grp__option.jsx-3704513609>option{font-size:15px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcbW9iaW5cXERlc2t0b3BcXFJlYWN0QXBwXFxuZXh0XFxjb21wb25lbnRzXFxIZWFkZXJcXGluZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWlDb0IsQUFHMEIsQUFVRSxBQUtBLGFBZE8sRUFVVixBQUtoQixZQUpZLFFBVkcsQ0FXZixVQVZzQixrQkFDSCxlQUNBLGVBQ1QsTUFDSyxXQUNmIiwiZmlsZSI6IkM6XFxVc2Vyc1xcbW9iaW5cXERlc2t0b3BcXFJlYWN0QXBwXFxuZXh0XFxjb21wb25lbnRzXFxIZWFkZXJcXGluZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHt1c2VTdGF0ZX0gZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQge3VzZVJvdXRlcn0gZnJvbSAnbmV4dC9yb3V0ZXInO1xyXG5cclxuY29uc3QgY291bnRyaWVzID0gW3tcclxuICAgIGxhYmVsOiAndXMnLFxyXG4gICAgbmFtZTogJ1VuaXRlZCBTdGF0ZSdcclxufSx7XHJcbiAgICBsYWJlbDogJ2luJyxcclxuICAgIG5hbWU6ICdJbmRpYSdcclxufV1cclxuXHJcbmNvbnN0IEhlYWRlciA9ICgpID0+IHtcclxuICAgIGNvbnN0IHJvdXRlciA9IHVzZVJvdXRlcigpO1xyXG4gICAgY29uc3QgW3NlbGVjdGVkQ291bnRyeSwgc2V0U2VsZWN0ZWRDb3VudHJ5XSA9IHVzZVN0YXRlKHJvdXRlci5xdWVyeS5jb3VudHJ5KTtcclxuXHJcblxyXG4gICAgY29uc3Qgb25DaGFuZ2VIYW5kbGVyID0gKGUpID0+IHtcclxuICAgICAgICBzZXRTZWxlY3RlZENvdW50cnkoZS50YXJnZXQudmFsdWUpO1xyXG4gICAgICAgIHJvdXRlci5wdXNoKGAvW2NvdW50cnldYCwgYC8ke2UudGFyZ2V0LnZhbHVlfWApOyAgICAgICAgXHJcbiAgICB9O1xyXG5cclxuICAgIGNvbnN0IHJlbmRlckNvdW50cmllcyA9ICgpID0+e1xyXG4gICAgICAgIHJldHVybiBjb3VudHJpZXMubWFwKGNvdW50cnkgPT4ge1xyXG4gICAgICAgICAgICByZXR1cm4gPG9wdGlvbiBrZXk9e2NvdW50cnkubGFiZWx9IHZhbHVlPXtjb3VudHJ5LmxhYmVsfT57Y291bnRyeS5uYW1lfTwvb3B0aW9uPlxyXG4gICAgICAgIH0pXHJcbiAgICB9XHJcbiAgICByZXR1cm4gKFxyXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiaGVhZGVyXCI+XHJcbiAgICAgICAgICAgIDxzZWxlY3QgY2xhc3NOYW1lPVwiZ3JwX19vcHRpb25cIlxyXG4gICAgICAgICAgICB2YWx1ZT17c2VsZWN0ZWRDb3VudHJ5fVxyXG4gICAgICAgICAgICBvbkNoYW5nZT17b25DaGFuZ2VIYW5kbGVyfT5cclxuICAgICAgICAgICAgICAgIHtyZW5kZXJDb3VudHJpZXMoKX1cclxuICAgICAgICAgICAgPC9zZWxlY3Q+ICAgICAgICBcclxuICAgICAgICA8c3R5bGUganN4PntgXHJcbiAgICAgICAgLmhlYWRlcntcclxuICAgICAgICAgICAgcGFkZGluZzogMjBweDtcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzMzMztcclxuICAgICAgICAgICAgY29sb3I6ICNmZmY7XHJcbiAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgICAgICAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICAgICAgICAgIHRvcDogMDtcclxuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC5ncnBfX29wdGlvbiB7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMjBweDtcclxuICAgICAgICAgICAgcGFkZGluZzogMnB4O1xyXG4gICAgICAgICAgICBtYXJnaW46MDtcclxuICAgICAgICB9XHJcbiAgICAgICAgLmdycF9fb3B0aW9uID4gOmdsb2JhbChvcHRpb24pe1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDE1cHg7ICAgICAgICAgICAgXHJcbiAgICAgICAgfVxyXG4gICAgICAgIGB9PC9zdHlsZT5cclxuICAgICAgICA8L2Rpdj5cclxuICAgICk7XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBIZWFkZXI7Il19 */\\n/*@ sourceURL=C:\\\\\\\\Users\\\\\\\\mobin\\\\\\\\Desktop\\\\\\\\ReactApp\\\\\\\\next\\\\\\\\components\\\\\\\\Header\\\\\\\\index.js */\"));\n};\n\nexport default Header;","map":{"version":3,"sources":["C:/Users/mobin/Desktop/ReactApp/next/components/Header/index.js"],"names":["useState","useRouter","countries","label","name","Header","router","selectedCountry","setSelectedCountry","query","country","onChangeHandler","e","target","value","push","renderCountries","map"],"mappings":";;;;AAAA,SAAQA,QAAR,QAAuB,OAAvB;AACA,SAAQC,SAAR,QAAwB,aAAxB;AAEA,MAAMC,SAAS,GAAG,CAAC;AACfC,EAAAA,KAAK,EAAE,IADQ;AAEfC,EAAAA,IAAI,EAAE;AAFS,CAAD,EAGhB;AACED,EAAAA,KAAK,EAAE,IADT;AAEEC,EAAAA,IAAI,EAAE;AAFR,CAHgB,CAAlB;;AAQA,MAAMC,MAAM,GAAG,MAAM;AACjB,QAAMC,MAAM,GAAGL,SAAS,EAAxB;AACA,QAAM;AAAA,OAACM,eAAD;AAAA,OAAkBC;AAAlB,MAAwCR,QAAQ,CAACM,MAAM,CAACG,KAAP,CAAaC,OAAd,CAAtD;;AAGA,QAAMC,eAAe,GAAIC,CAAD,IAAO;AAC3BJ,IAAAA,kBAAkB,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAlB;AACAR,IAAAA,MAAM,CAACS,IAAP,CAAa,YAAb,EAA2B,IAAGH,CAAC,CAACC,MAAF,CAASC,KAAM,EAA7C;AACH,GAHD;;AAKA,QAAME,eAAe,GAAG,MAAK;AACzB,WAAOd,SAAS,CAACe,GAAV,CAAcP,OAAO,IAAI;AAC5B,aAAO;AAAQ,QAAA,GAAG,EAAEA,OAAO,CAACP,KAArB;AAA4B,QAAA,KAAK,EAAEO,OAAO,CAACP,KAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAmDO,OAAO,CAACN,IAA3D,CAAP;AACH,KAFM,CAAP;AAGH,GAJD;;AAKA,SACI;AAAA,wCAAe,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACA,IAAA,KAAK,EAAEG,eADP;AAEA,IAAA,QAAQ,EAAEI,eAFV;AAAA,wCAAkB,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGKK,eAAe,EAHpB,CADJ;AAAA;AAAA;AAAA,+6FADJ;AA6BH,CA5CD;;AA8CA,eAAeX,MAAf","sourcesContent":["import {useState} from 'react';\r\nimport {useRouter} from 'next/router';\r\n\r\nconst countries = [{\r\n    label: 'us',\r\n    name: 'United State'\r\n},{\r\n    label: 'in',\r\n    name: 'India'\r\n}]\r\n\r\nconst Header = () => {\r\n    const router = useRouter();\r\n    const [selectedCountry, setSelectedCountry] = useState(router.query.country);\r\n\r\n\r\n    const onChangeHandler = (e) => {\r\n        setSelectedCountry(e.target.value);\r\n        router.push(`/[country]`, `/${e.target.value}`);        \r\n    };\r\n\r\n    const renderCountries = () =>{\r\n        return countries.map(country => {\r\n            return <option key={country.label} value={country.label}>{country.name}</option>\r\n        })\r\n    }\r\n    return (\r\n        <div className=\"header\">\r\n            <select className=\"grp__option\"\r\n            value={selectedCountry}\r\n            onChange={onChangeHandler}>\r\n                {renderCountries()}\r\n            </select>        \r\n        <style jsx>{`\r\n        .header{\r\n            padding: 20px;\r\n            background-color: #333;\r\n            color: #fff;\r\n            text-align: center;\r\n            cursor: pointer;\r\n            position: fixed;\r\n            top: 0;\r\n            width: 100%;\r\n        }\r\n        .grp__option {\r\n            font-size: 20px;\r\n            padding: 2px;\r\n            margin:0;\r\n        }\r\n        .grp__option > :global(option){\r\n            font-size: 15px;            \r\n        }\r\n        `}</style>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;"]},"metadata":{},"sourceType":"module"}