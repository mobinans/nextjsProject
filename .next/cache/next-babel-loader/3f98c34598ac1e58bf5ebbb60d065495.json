{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mobin\\\\Desktop\\\\ReactApp\\\\next\\\\pages\\\\[country]\\\\index.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport axios from 'axios';\nimport Link from 'next/link';\nimport Thumbnail from '../../components/Thumbnail';\n\nconst Home = ({\n  shows\n}) => {\n  //console.log(shows)    \n  const renderShows = () => {\n    return shows.map((showItem, index) => {\n      const {\n        show\n      } = showItem;\n      return __jsx(\"li\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }, __jsx(Thumbnail, {\n        imageURL: show.image && show.image.medium || undefined,\n        caption: show.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }));\n    });\n  };\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, __jsx(\"ul\", {\n    className: \"jsx-203092793\" + \" \" + \"tvshows-grid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: \"/about\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    className: \"jsx-203092793\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"About\")), renderShows(), __jsx(_JSXStyle, {\n    id: \"203092793\",\n    __self: this\n  }, \".tvshows-grid.jsx-203092793{display:grid;grid-template-columns:1fr 1fr;gap:10px;list-style-type:none;padding:0;margin:0;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcbW9iaW5cXERlc2t0b3BcXFJlYWN0QXBwXFxuZXh0XFxwYWdlc1xcW2NvdW50cnldXFxpbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUEwQmdCLEFBRW9CLGFBQ2lCLDhCQUNILFNBQ1kscUJBQ1gsVUFDRCxTQUM3QiIsImZpbGUiOiJDOlxcVXNlcnNcXG1vYmluXFxEZXNrdG9wXFxSZWFjdEFwcFxcbmV4dFxccGFnZXNcXFtjb3VudHJ5XVxcaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnO1xyXG5pbXBvcnQgTGluayBmcm9tICduZXh0L2xpbmsnO1xyXG5cclxuaW1wb3J0IFRodW1ibmFpbCBmcm9tICcuLi8uLi9jb21wb25lbnRzL1RodW1ibmFpbCc7XHJcblxyXG5jb25zdCBIb21lID0gKHsgc2hvd3MgfSkgPT4ge1xyXG4gICAgLy9jb25zb2xlLmxvZyhzaG93cykgICAgXHJcbiAgICBjb25zdCByZW5kZXJTaG93cyA9ICgpID0+IHtcclxuICAgICAgICByZXR1cm4gc2hvd3MubWFwKChzaG93SXRlbSwgaW5kZXgpID0+IHtcclxuICAgICAgICAgICAgY29uc3QgeyBzaG93IH0gPSBzaG93SXRlbTtcclxuICAgICAgICAgICAgcmV0dXJuIDxsaSBrZXk9e2luZGV4fT5cclxuICAgICAgICAgICAgICAgIDxUaHVtYm5haWxcclxuICAgICAgICAgICAgICAgICAgICBpbWFnZVVSTD17KHNob3cuaW1hZ2UgJiYgc2hvdy5pbWFnZS5tZWRpdW0pIHx8IHVuZGVmaW5lZH1cclxuICAgICAgICAgICAgICAgICAgICBjYXB0aW9uPXtzaG93Lm5hbWV9IC8+PC9saT5cclxuICAgICAgICB9KVxyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiAoXHJcbiAgICAgICAgPGRpdj5cclxuICAgICAgICAgICAgPHVsIGNsYXNzTmFtZT1cInR2c2hvd3MtZ3JpZFwiPlxyXG4gICAgICAgICAgICAgICAgPExpbmsgaHJlZj1cIi9hYm91dFwiPlxyXG4gICAgICAgICAgICAgICAgPGE+QWJvdXQ8L2E+XHJcbiAgICAgICAgICAgICAgICA8L0xpbms+XHJcbiAgICAgICAgICAgIHtyZW5kZXJTaG93cygpfVxyXG5cclxuICAgICAgICAgICAgPHN0eWxlIGpzeD57XHJcbiAgICAgICAgICAgICAgICBgLnR2c2hvd3MtZ3JpZCB7XHJcblx0XHRcdFx0XHRcdGRpc3BsYXk6IGdyaWQ7XHJcblx0XHRcdFx0XHRcdGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDFmcjtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZ2FwOiAxMHB4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IDA7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG1hcmdpbjogMDtcclxuXHRcdFx0XHR9YH08L3N0eWxlPlxyXG4gICAgICAgICAgICAgICAgICAgIDwvdWw+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICApO1xyXG59XHJcblxyXG5Ib21lLmdldEluaXRpYWxQcm9wcyA9IGFzeW5jIGNvbnRleHQgPT4ge1xyXG4gICAgY29uc3QgY291bnRyeSA9IGNvbnRleHQucXVlcnkuY291bnRyeSB8fCAnaW4nO1xyXG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBheGlvcy5nZXQoYGh0dHA6Ly9hcGkudHZtYXplLmNvbS9zY2hlZHVsZT9jb3VudHJ5PSR7Y291bnRyeX0mZGF0ZT0yMDE0LTEyLTAxYCk7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICAgIHNob3dzOiByZXNwb25zZS5kYXRhXHJcbiAgICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IEhvbWU7Il19 */\\n/*@ sourceURL=C:\\\\\\\\Users\\\\\\\\mobin\\\\\\\\Desktop\\\\\\\\ReactApp\\\\\\\\next\\\\\\\\pages\\\\\\\\[country]\\\\\\\\index.js */\")));\n};\n\nHome.getInitialProps = async context => {\n  const country = context.query.country || 'in';\n  const response = await axios.get(`http://api.tvmaze.com/schedule?country=${country}&date=2014-12-01`);\n  return {\n    shows: response.data\n  };\n};\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/mobin/Desktop/ReactApp/next/pages/[country]/index.js"],"names":["axios","Link","Thumbnail","Home","shows","renderShows","map","showItem","index","show","image","medium","undefined","name","getInitialProps","context","country","query","response","get","data"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,OAAOC,SAAP,MAAsB,4BAAtB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AACxB;AACA,QAAMC,WAAW,GAAG,MAAM;AACtB,WAAOD,KAAK,CAACE,GAAN,CAAU,CAACC,QAAD,EAAWC,KAAX,KAAqB;AAClC,YAAM;AAAEC,QAAAA;AAAF,UAAWF,QAAjB;AACA,aAAO;AAAI,QAAA,GAAG,EAAEC,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACH,MAAC,SAAD;AACI,QAAA,QAAQ,EAAGC,IAAI,CAACC,KAAL,IAAcD,IAAI,CAACC,KAAL,CAAWC,MAA1B,IAAqCC,SADnD;AAEI,QAAA,OAAO,EAAEH,IAAI,CAACI,IAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADG,CAAP;AAIH,KANM,CAAP;AAOH,GARD;;AAUA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA,uCAAc,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADA,CADJ,EAICR,WAAW,EAJZ;AAAA;AAAA;AAAA,uiFADJ,CADJ;AAoBH,CAhCD;;AAkCAF,IAAI,CAACW,eAAL,GAAuB,MAAMC,OAAN,IAAiB;AACpC,QAAMC,OAAO,GAAGD,OAAO,CAACE,KAAR,CAAcD,OAAd,IAAyB,IAAzC;AACA,QAAME,QAAQ,GAAG,MAAMlB,KAAK,CAACmB,GAAN,CAAW,0CAAyCH,OAAQ,kBAA5D,CAAvB;AACA,SAAO;AACHZ,IAAAA,KAAK,EAAEc,QAAQ,CAACE;AADb,GAAP;AAGH,CAND;;AAQA,eAAejB,IAAf","sourcesContent":["import axios from 'axios';\r\nimport Link from 'next/link';\r\n\r\nimport Thumbnail from '../../components/Thumbnail';\r\n\r\nconst Home = ({ shows }) => {\r\n    //console.log(shows)    \r\n    const renderShows = () => {\r\n        return shows.map((showItem, index) => {\r\n            const { show } = showItem;\r\n            return <li key={index}>\r\n                <Thumbnail\r\n                    imageURL={(show.image && show.image.medium) || undefined}\r\n                    caption={show.name} /></li>\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <ul className=\"tvshows-grid\">\r\n                <Link href=\"/about\">\r\n                <a>About</a>\r\n                </Link>\r\n            {renderShows()}\r\n\r\n            <style jsx>{\r\n                `.tvshows-grid {\r\n\t\t\t\t\t\tdisplay: grid;\r\n\t\t\t\t\t\tgrid-template-columns: 1fr 1fr;\r\n                        gap: 10px;\r\n                        list-style-type: none;\r\n                        padding: 0;\r\n                        margin: 0;\r\n\t\t\t\t}`}</style>\r\n                    </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nHome.getInitialProps = async context => {\r\n    const country = context.query.country || 'in';\r\n    const response = await axios.get(`http://api.tvmaze.com/schedule?country=${country}&date=2014-12-01`);\r\n    return {\r\n        shows: response.data\r\n    }\r\n}\r\n\r\nexport default Home;"]},"metadata":{},"sourceType":"module"}