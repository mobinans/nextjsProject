{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mobin\\\\Desktop\\\\ReactApp\\\\next\\\\components\\\\Header\\\\index.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport { useRouter } from 'next/router';\nconst countries = [{\n  label: 'us',\n  name: 'United State'\n}, {\n  label: 'in',\n  name: 'India'\n}];\n\nconst Header = () => {\n  const router = useRouter();\n  const {\n    0: selectedCountry,\n    1: setSelectedCountry\n  } = useState(router.query.country);\n\n  const onChangeHandler = e => {\n    setSelectedCountry(e.target.value);\n    router.push(`/[country]`, `/${e.target.value}`);\n  };\n\n  const renderCountries = () => {\n    return countries.map(country => {\n      return __jsx(\"option\", {\n        key: country.label,\n        value: country.label,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, country.name);\n    });\n  };\n\n  return __jsx(\"div\", {\n    className: \"jsx-4083186376\" + \" \" + \"header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, __jsx(\"select\", {\n    value: selectedCountry,\n    onChange: onChangeHandler,\n    className: \"jsx-4083186376\" + \" \" + \"grp__option\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, renderCountries()), __jsx(_JSXStyle, {\n    id: \"4083186376\",\n    __self: this\n  }, \".header.jsx-4083186376{padding:20px;background-color:#333;color:#fff;text-align:center;cursor:pointer;position:fixed;top:0;width:100%;margin:0;}.grp__option.jsx-4083186376{font-size:20px;padding:2px;}.grp__option.jsx-4083186376>option{font-size:15px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcbW9iaW5cXERlc2t0b3BcXFJlYWN0QXBwXFxuZXh0XFxjb21wb25lbnRzXFxIZWFkZXJcXGluZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWlDb0IsQUFHMEIsQUFXRSxBQUlBLGFBZE8sRUFXVixBQUloQixZQUhBLFFBWGUsV0FDTyxrQkFDSCxlQUNBLGVBQ1QsTUFDSyxXQUNILFNBQ1oiLCJmaWxlIjoiQzpcXFVzZXJzXFxtb2JpblxcRGVza3RvcFxcUmVhY3RBcHBcXG5leHRcXGNvbXBvbmVudHNcXEhlYWRlclxcaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge3VzZVN0YXRlfSBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCB7dXNlUm91dGVyfSBmcm9tICduZXh0L3JvdXRlcic7XHJcblxyXG5jb25zdCBjb3VudHJpZXMgPSBbe1xyXG4gICAgbGFiZWw6ICd1cycsXHJcbiAgICBuYW1lOiAnVW5pdGVkIFN0YXRlJ1xyXG59LHtcclxuICAgIGxhYmVsOiAnaW4nLFxyXG4gICAgbmFtZTogJ0luZGlhJ1xyXG59XVxyXG5cclxuY29uc3QgSGVhZGVyID0gKCkgPT4ge1xyXG4gICAgY29uc3Qgcm91dGVyID0gdXNlUm91dGVyKCk7XHJcbiAgICBjb25zdCBbc2VsZWN0ZWRDb3VudHJ5LCBzZXRTZWxlY3RlZENvdW50cnldID0gdXNlU3RhdGUocm91dGVyLnF1ZXJ5LmNvdW50cnkpO1xyXG5cclxuXHJcbiAgICBjb25zdCBvbkNoYW5nZUhhbmRsZXIgPSAoZSkgPT4ge1xyXG4gICAgICAgIHNldFNlbGVjdGVkQ291bnRyeShlLnRhcmdldC52YWx1ZSk7XHJcbiAgICAgICAgcm91dGVyLnB1c2goYC9bY291bnRyeV1gLCBgLyR7ZS50YXJnZXQudmFsdWV9YCk7ICAgICAgICBcclxuICAgIH07XHJcblxyXG4gICAgY29uc3QgcmVuZGVyQ291bnRyaWVzID0gKCkgPT57XHJcbiAgICAgICAgcmV0dXJuIGNvdW50cmllcy5tYXAoY291bnRyeSA9PiB7XHJcbiAgICAgICAgICAgIHJldHVybiA8b3B0aW9uIGtleT17Y291bnRyeS5sYWJlbH0gdmFsdWU9e2NvdW50cnkubGFiZWx9Pntjb3VudHJ5Lm5hbWV9PC9vcHRpb24+XHJcbiAgICAgICAgfSlcclxuICAgIH1cclxuICAgIHJldHVybiAoXHJcbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJoZWFkZXJcIj5cclxuICAgICAgICAgICAgPHNlbGVjdCBjbGFzc05hbWU9XCJncnBfX29wdGlvblwiXHJcbiAgICAgICAgICAgIHZhbHVlPXtzZWxlY3RlZENvdW50cnl9XHJcbiAgICAgICAgICAgIG9uQ2hhbmdlPXtvbkNoYW5nZUhhbmRsZXJ9PlxyXG4gICAgICAgICAgICAgICAge3JlbmRlckNvdW50cmllcygpfVxyXG4gICAgICAgICAgICA8L3NlbGVjdD4gICAgICAgIFxyXG4gICAgICAgIDxzdHlsZSBqc3g+e2BcclxuICAgICAgICAuaGVhZGVye1xyXG4gICAgICAgICAgICBwYWRkaW5nOiAyMHB4O1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzMzO1xyXG4gICAgICAgICAgICBjb2xvcjogI2ZmZjtcclxuICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICAgICAgICAgIHBvc2l0aW9uOiBmaXhlZDtcclxuICAgICAgICAgICAgdG9wOiAwO1xyXG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgbWFyZ2luOjA7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC5ncnBfX29wdGlvbiB7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMjBweDtcclxuICAgICAgICAgICAgcGFkZGluZzogMnB4O1xyXG4gICAgICAgIH1cclxuICAgICAgICAuZ3JwX19vcHRpb24gPiA6Z2xvYmFsKG9wdGlvbil7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMTVweDsgICAgICAgICAgICBcclxuICAgICAgICB9XHJcbiAgICAgICAgYH08L3N0eWxlPlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgKTtcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IEhlYWRlcjsiXX0= */\\n/*@ sourceURL=C:\\\\\\\\Users\\\\\\\\mobin\\\\\\\\Desktop\\\\\\\\ReactApp\\\\\\\\next\\\\\\\\components\\\\\\\\Header\\\\\\\\index.js */\"));\n};\n\nexport default Header;","map":{"version":3,"sources":["C:/Users/mobin/Desktop/ReactApp/next/components/Header/index.js"],"names":["useState","useRouter","countries","label","name","Header","router","selectedCountry","setSelectedCountry","query","country","onChangeHandler","e","target","value","push","renderCountries","map"],"mappings":";;;;AAAA,SAAQA,QAAR,QAAuB,OAAvB;AACA,SAAQC,SAAR,QAAwB,aAAxB;AAEA,MAAMC,SAAS,GAAG,CAAC;AACfC,EAAAA,KAAK,EAAE,IADQ;AAEfC,EAAAA,IAAI,EAAE;AAFS,CAAD,EAGhB;AACED,EAAAA,KAAK,EAAE,IADT;AAEEC,EAAAA,IAAI,EAAE;AAFR,CAHgB,CAAlB;;AAQA,MAAMC,MAAM,GAAG,MAAM;AACjB,QAAMC,MAAM,GAAGL,SAAS,EAAxB;AACA,QAAM;AAAA,OAACM,eAAD;AAAA,OAAkBC;AAAlB,MAAwCR,QAAQ,CAACM,MAAM,CAACG,KAAP,CAAaC,OAAd,CAAtD;;AAGA,QAAMC,eAAe,GAAIC,CAAD,IAAO;AAC3BJ,IAAAA,kBAAkB,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAlB;AACAR,IAAAA,MAAM,CAACS,IAAP,CAAa,YAAb,EAA2B,IAAGH,CAAC,CAACC,MAAF,CAASC,KAAM,EAA7C;AACH,GAHD;;AAKA,QAAME,eAAe,GAAG,MAAK;AACzB,WAAOd,SAAS,CAACe,GAAV,CAAcP,OAAO,IAAI;AAC5B,aAAO;AAAQ,QAAA,GAAG,EAAEA,OAAO,CAACP,KAArB;AAA4B,QAAA,KAAK,EAAEO,OAAO,CAACP,KAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAmDO,OAAO,CAACN,IAA3D,CAAP;AACH,KAFM,CAAP;AAGH,GAJD;;AAKA,SACI;AAAA,wCAAe,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACA,IAAA,KAAK,EAAEG,eADP;AAEA,IAAA,QAAQ,EAAEI,eAFV;AAAA,wCAAkB,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGKK,eAAe,EAHpB,CADJ;AAAA;AAAA;AAAA,+6FADJ;AA6BH,CA5CD;;AA8CA,eAAeX,MAAf","sourcesContent":["import {useState} from 'react';\r\nimport {useRouter} from 'next/router';\r\n\r\nconst countries = [{\r\n    label: 'us',\r\n    name: 'United State'\r\n},{\r\n    label: 'in',\r\n    name: 'India'\r\n}]\r\n\r\nconst Header = () => {\r\n    const router = useRouter();\r\n    const [selectedCountry, setSelectedCountry] = useState(router.query.country);\r\n\r\n\r\n    const onChangeHandler = (e) => {\r\n        setSelectedCountry(e.target.value);\r\n        router.push(`/[country]`, `/${e.target.value}`);        \r\n    };\r\n\r\n    const renderCountries = () =>{\r\n        return countries.map(country => {\r\n            return <option key={country.label} value={country.label}>{country.name}</option>\r\n        })\r\n    }\r\n    return (\r\n        <div className=\"header\">\r\n            <select className=\"grp__option\"\r\n            value={selectedCountry}\r\n            onChange={onChangeHandler}>\r\n                {renderCountries()}\r\n            </select>        \r\n        <style jsx>{`\r\n        .header{\r\n            padding: 20px;\r\n            background-color: #333;\r\n            color: #fff;\r\n            text-align: center;\r\n            cursor: pointer;\r\n            position: fixed;\r\n            top: 0;\r\n            width: 100%;\r\n            margin:0;\r\n        }\r\n        .grp__option {\r\n            font-size: 20px;\r\n            padding: 2px;\r\n        }\r\n        .grp__option > :global(option){\r\n            font-size: 15px;            \r\n        }\r\n        `}</style>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;"]},"metadata":{},"sourceType":"module"}